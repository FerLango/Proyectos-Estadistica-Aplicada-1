library(htmlwidgets)
data_url <- "https://archivo.datos.cdmx.gob.mx/fiscalia-general-de-justicia/victimas-en-carpetas-de-investigacion-fgj/victimas_completa_julio_2021.csv"
victimas <- read_csv(data_url, show_col_types = FALSE)
dicc_url <- "https://datos.cdmx.gob.mx/dataset/7593b324-6010-44f7-8132-cb8b2276c842/resource/10235569-f4a9-4876-9465-9780887df8e2/download/diccionario-de-victimas-actualizado.xlsx"
diccionario <- read.xlsx(dicc_url, sheet =1)
victimas$Mes_inicio <- as.factor(victimas$Mes_inicio)
victimas$FechaInicio <- dmy(victimas$FechaInicio)
victimas$Delito <- as.factor(victimas$Delito)
victimas$Categoria <- as.factor(victimas$Categoria)
victimas$Sexo <- as.factor(victimas$Sexo)
victimas$TipoPersona <- as.factor(victimas$TipoPersona)
victimas$CalidadJuridica <- as.factor(victimas$CalidadJuridica)
victimas$competencia <- as.factor(victimas$competencia)
victimas$Mes_hecho <- as.factor(victimas$Mes_hecho)
victimas$FechaHecho <- dmy(victimas$FechaHecho)
victimas$AlcaldiaHechos <- as.factor(victimas$AlcaldiaHechos)
diccionario[,1:2] %>%
kable()
victimas %>%
select(Año_inicio, Sexo, Edad) %>%
rename('Año inicio'=Año_inicio) %>%
filter(!is.na(Edad), !is.na(Sexo), Edad>0, Edad<150) %>%
group_by(`Año inicio`, Sexo) %>%
summarise(Media = round(mean(Edad),2),
SD = round(sd(Edad),2),
Mediana = median(Edad),
Asimetría = round(skewness(Edad),2),
Curtosis = round(kurtosis(Edad),2),
#IQR = IQR(Edad),
Mínimo = min(Edad),
Máximo = max(Edad)) %>%
kable()
cloud <-
victimas %>%
select(Delito) %>%
group_by(Delito) %>%
tally() %>%
na.omit() #%>%
#wordcloud2(size=5, color='random-dark',backgroundColor="white")
#saveWidget(cloud, "tmp.html", selfcontained = F)
#webshot::webshot("tmp.html","fig_1.png", delay =5)
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 2,
max.words=200, random.order=TRUE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
#cloud
if (!dir.exists("datos_mapa")) {
map_url <- "https://github.com/prestevez/covid-19-mx-map/raw/master/datos_covid/01_32_mun.zip"
download.file(map_url, destfile = "datos_mapa.zip")
unzip("datos_mapa.zip", exdir = "datos_mapa")
file.remove("datos_mapa.zip")
}
mex_map <-
st_read("datos_mapa/01_32_mun.shp", quiet = TRUE) %>%
st_set_crs("+proj=lcc +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102 +x_0=2500000 +y_0=0 +ellps=GRS80 +units=m +no_defs") %>%
filter(CVE_ENT == "09") %>%
rename(Alcaldia = NOMGEO)
mex_map$Alcaldia <- chartr("ÁÉÍÓÚ", "AEIOU",
toupper(mex_map$Alcaldia))
map_filt <-
victimas %>%
select(AlcaldiaHechos) %>%
group_by(AlcaldiaHechos) %>%
tally(name = "Delitos") %>%
na.omit() %>%
arrange(desc(Delitos))
map_filt$AlcaldiaHechos <-
str_replace(map_filt$AlcaldiaHechos,
"GUSTAVO A MADERO", "GUSTAVO A. MADERO")
mex_map_del <-
left_join(mex_map, map_filt,
by = c("Alcaldia" = "AlcaldiaHechos")) %>%
rename(Alcaldía = Alcaldia)
rm(mex_map)
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "longitud",
y = "latitud") +
theme_bw() +
scale_fill_gradient("Total de delitos",
high = "red", low = "yellow") +
theme(legend.position = "none")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
dynamicTicks = TRUE, width = 800)
loli_data <-
data.frame(día = as.character(wday(victimas$FechaHecho,
label = TRUE, abbr = FALSE))) %>%
group_by(día) %>%
tally() %>%
na.omit() %>%
rename(delitos = n)
loli <-
loli_data %>%
ggplot(aes(x=día, y=delitos)) +
geom_segment(aes(xend=día, yend=0)) +
geom_point(size=4, color= "#189c54") +
theme_bw() +
labs(title = "Total de delitos por día de la semana",
x = "día de la semana",
y = "total de delitos")
ggplotly(loli, width = 800)
heat <-
victimas %>%
select(Mes_hecho, Categoria) %>%
filter(!is.na(Mes_hecho)) %>%
group_by(Mes_hecho, Categoria) %>%
tally() %>%
arrange(Categoria) %>%
ggplot(aes(x=factor(Mes_hecho,
levels = c("Enero","Febrero","Marzo",
"Abril","Mayo","Junio",
"Julio","Agosto","Septiembre",
"Octubre","Noviembre",
"Diciembre")),
y=Categoria, fill=n)) +
geom_tile() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45)) +
scale_y_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20)) +
scale_fill_gradient(low = "yellow", high = "red") +
labs(title = "Tipo de delito respecto a cada mes",
x = "mes",
y = "tipo de delito")
ggplotly(heat, dynamicTicks = TRUE, width = 800)
dens <-
victimas %>%
filter(Edad < 150, Edad>0) %>%
ggplot() +
geom_density(aes(x=Edad,fill=factor(Año_inicio),
color=factor(Año_inicio)),
alpha=0.5, size=1, stat = "count") +
labs(title = "Densidad de la edad por año",
x = "edad",
y = "cantidad de personas",
fill = "Año",
color = "")
ggplotly(dens, tooltip = c("count", "Edad"),
dynamicTicks = TRUE, width = 800)
box <-
victimas %>%
filter(Edad<150) %>%
ggplot() +
geom_boxplot(aes(x = factor(Año_inicio),y = Edad,
color = factor(Año_inicio))) +
labs(title = "Distribución de la edad en cada año",
x = "año de la carpeta",
y = "edad") +
theme(legend.position = "none")
ggplotly(box, dynamicTicks = TRUE, width = 800)
histo <-
victimas %>%
filter(!is.na(Sexo), !is.na(CalidadJuridica)) %>%
arrange(CalidadJuridica) %>%
ggplot() +
geom_histogram(aes(Sexo, fill = CalidadJuridica),
stat = "count") +
facet_grid(Año_inicio~.) +
coord_flip() +
labs(title = "Calidad jurídica de las víctimas",
x = "calidad jurídica",
y = "cantidad de delitos",
fill = "") +
theme(axis.text.y = element_text(angle = 70))
ggplotly(histo, width = 800) %>%
layout(legend = list(x = 1.05,
title =list(text= "Calidad jurídica")))
line<-
victimas %>%
group_by(Categoria, FechaInicio) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n, color=Categoria)) +
#theme(legend.position = "bottom") +
labs(title = "Delitos a través del tiempo",
x = "fecha",
y = "cantidad de delitos")
ggplotly(line, dynamicTicks = TRUE, width = 800) %>%
layout(legend = list(x = 1, y = 1,
font = list(size = 8)))
pie1 <-
victimas %>%
select(CalidadJuridica) %>%
group_by(CalidadJuridica) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~CalidadJuridica, values = ~n, type = 'pie',
width = 800) %>%
layout(title = "Proporción de la calidad jurídica de las personas")
pie1
pie2 <-
victimas %>%
select(competencia) %>%
group_by(competencia) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~competencia, values = ~n, type = 'pie',
width = 800) %>%
layout(title = "Proporción de la clasificación de los hechos")
pie2
pie3 <-
victimas %>%
select(TipoPersona) %>%
group_by(TipoPersona) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~TipoPersona, values = ~n, type = 'pie',
width = 800) %>%
layout(title = "Proporción del tipo de persona")
pie3
pie4 <-
victimas %>%
select(Sexo) %>%
group_by(Sexo) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~Sexo, values = ~n, type = 'pie',
width = 800) %>%
layout(title = "Proporción del sexo de las víctimas")
pie4
bar_data <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(tiempo, na.rm = TRUE)) %>%
arrange(Categoria)
bar <-
bar_data %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
labs(title = "Promedio del tiempo entre hecho y denuncia por tipo de delito",
x = "tipo de delito",
y = "tiempo promedio entre el delito y la denuncia") +
theme(legend.position = "none")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("tiempo"), dynamicTicks = TRUE,
width = 800)
scat <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
filter(Edad<150, Edad>0, Categoria == "VIOLACIÓN",
!is.na(Sexo)) %>%
ggplot() +
geom_point(aes(x=Edad, y=inicio_vs_hecho, color = Sexo)) +
labs(title = "Días desde el hecho a la denuncia por edad",
subtitle = 'Fecha: {frame_time}',
x = "edad",
y = "días desde que ocurre el hecho hasta que se denuncia") +
ylim(0,5000) +
transition_time(FechaInicio) +
ease_aes('linear')
animate(scat, duration = 40, width = 800)
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 2,
max.words=200, random.order=TRUE, rot.per=0.35)
?brewer.pal
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 2,
max.words=200, random.order=TRUE, rot.per=0.35,
colors=brewer.pal(50, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 2,
max.words=200, random.order=TRUE, rot.per=0.35,
colors=brewer.pal(12, "Paired"))
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 2,
max.words=200, random.order=TRUE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 1,
max.words=200, random.order=TRUE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
View(cloud)
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
cloud <-
victimas %>%
select(Delito) %>%
group_by(Delito) %>%
tally() %>%
na.omit() %>%
arrange(desc(n))
View(cloud)
wordcloud(words = cloud$Delito, freq = cloud$n, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
View(cloud)
?wordcloud
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = FALSE,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=0,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.5,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=TRUE, rot.per=.5,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.5,
colors=brewer.pal(8, "Dark2"))
?bewer.pal
brewer.pal(8, "Dark2")
?brewer.pal
grDevices::colors()
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.5,
colors=grDevices::colors())
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.5,
colors=grDevices::colors())
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.5,
colors=grDevices::colors())
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.3,
colors=grDevices::colors())
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.3,
colors=grDevices::colors())
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.3,
colors=grDevices::colors(), scale=c(8,.2))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.15,
colors=grDevices::colors(), scale=c(8,.2))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.15,
colors=grDevices::colors())
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=grDevices::colors(), strwidth(800, units = "px"))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=grDevices::colors())
colorspace::diverge_hsv()
colorspace::diverge_hsv(50)
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=colorspace::diverge_hsv(50))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=colorspace::rainbow_hcl(50))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=colorspace::rainbow_hcl(500))
install.packages("colorRamps")
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=colorRamps::primary.colors(50))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=grDevices::rainbow(50))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = TRUE,
max.words=200, random.order=FALSE, rot.per=.20,
colors=colorRamps::primary.colors(50))
ls()
list(ls())
ls() - "victimas"
ls() - c("victimas")
ls()[!(ls() %in% c("victimas"))]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE,
message = FALSE, fig.align = "center")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
dynamicTicks = TRUE, width = 800)
library(plotly)
library(tidyverse)
library(lubridate)
library(openxlsx)
library(kableExtra)
library(sf)
library(moments)
library(gganimate)
library(wordcloud)
if (!dir.exists("datos_mapa")) {
map_url <- "https://github.com/prestevez/covid-19-mx-map/raw/master/datos_covid/01_32_mun.zip"
download.file(map_url, destfile = "datos_mapa.zip")
unzip("datos_mapa.zip", exdir = "datos_mapa")
file.remove("datos_mapa.zip")
}
mex_map <-
st_read("datos_mapa/01_32_mun.shp", quiet = TRUE) %>%
st_set_crs("+proj=lcc +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102 +x_0=2500000 +y_0=0 +ellps=GRS80 +units=m +no_defs") %>%
filter(CVE_ENT == "09") %>%
rename(Alcaldia = NOMGEO)
mex_map$Alcaldia <- chartr("ÁÉÍÓÚ", "AEIOU",
toupper(mex_map$Alcaldia))
map_filt <-
victimas %>%
select(AlcaldiaHechos) %>%
group_by(AlcaldiaHechos) %>%
tally(name = "Delitos") %>%
na.omit() %>%
arrange(desc(Delitos))
map_filt$AlcaldiaHechos <-
str_replace(map_filt$AlcaldiaHechos,
"GUSTAVO A MADERO", "GUSTAVO A. MADERO")
mex_map_del <-
left_join(mex_map, map_filt,
by = c("Alcaldia" = "AlcaldiaHechos")) %>%
rename(Alcaldía = Alcaldia)
rm(mex_map)
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "longitud",
y = "latitud") +
theme_bw() +
scale_fill_gradient("Total de delitos",
high = "red", low = "yellow") +
theme(legend.position = "none")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
dynamicTicks = TRUE, width = 800)
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
width = 800)
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "longitud",
y = "latitud") +
theme_bw() +
scale_fill_gradient("Total de delitos",
high = "red", low = "yellow") +
theme(legend.position = "right")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
width = 800)
?scale_fill_gradient
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "longitud",
y = "latitud") +
theme_bw() +
scale_fill_gradient(high = "red", low = "yellow", labels = NULL) +
theme(legend.position = "right")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
width = 800)
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "longitud",
y = "latitud") +
theme_bw() +
scale_fill_gradient(high = "red", low = "yellow", name = NULL) +
theme(legend.position = "right")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
width = 800)
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "longitud",
y = "latitud") +
theme_bw() +
scale_fill_gradient(high = "red", low = "yellow", name = NULL,
labels = NULL) +
theme(legend.position = "right")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
width = 800)
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "longitud",
y = "latitud") +
theme_bw() +
scale_fill_gradient(high = "red", low = "yellow", name = NULL,
labels = NULL, breaks = NULL) +
theme(legend.position = "right")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
width = 800)
rm(list = ls()[!(ls() %in% c("victimas", "diccionario"))])
