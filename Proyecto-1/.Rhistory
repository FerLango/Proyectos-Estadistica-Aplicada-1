geom_tile() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45)) +
scale_y_discrete(labels=
substr(unique(sort(victimas$Categoria)),
0,35)) +
scale_fill_gradient2(low="green", mid="yellow", high="red",
midpoint = mean(log(heat_data$Delitos,
base=50))) +
labs(title = "Tipo de delito respecto a cada mes",
x = "Mes",
y = "Tipo de delito")
ggplotly(heat, dynamicTicks = TRUE, width = 800,
tooltip = c("Categoría", "Mes", "Delitos"))
heat <-
heat_data %>%
ggplot(aes(x=Mes, y=Categoría, fill=log(Delitos),
size=Delitos)) +
geom_tile() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45)) +
scale_y_discrete(labels=
substr(unique(sort(victimas$Categoria)),
0,35)) +
scale_fill_gradient2(low="green", mid="yellow", high="red",
midpoint = mean(log(heat_data$Delitos))) +
labs(title = "Tipo de delito respecto a cada mes",
x = "Mes",
y = "Tipo de delito")
ggplotly(heat, dynamicTicks = TRUE, width = 800,
tooltip = c("Categoría", "Mes", "Delitos"))
heat <-
heat_data %>%
ggplot(aes(x=Mes, y=Categoría, fill=log10(Delitos),
size=Delitos)) +
geom_tile() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45)) +
scale_y_discrete(labels=
substr(unique(sort(victimas$Categoria)),
0,35)) +
scale_fill_gradient2(low="green", mid="yellow", high="red",
midpoint = mean(log10(heat_data$Delitos))) +
labs(title = "Tipo de delito respecto a cada mes",
x = "Mes",
y = "Tipo de delito")
ggplotly(heat, dynamicTicks = TRUE, width = 800,
tooltip = c("Categoría", "Mes", "Delitos"))
heat <-
heat_data %>%
ggplot(aes(x=Mes, y=Categoría, fill=log(Delitos),
size=Delitos)) +
geom_tile() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45)) +
scale_y_discrete(labels=
substr(unique(sort(victimas$Categoria)),
0,35)) +
scale_fill_gradient2(low="green", mid="yellow", high="red",
midpoint = mean(log(heat_data$Delitos))) +
labs(title = "Tipo de delito respecto a cada mes",
x = "Mes",
y = "Tipo de delito")
ggplotly(heat, dynamicTicks = TRUE, width = 800,
tooltip = c("Categoría", "Mes", "Delitos"))
A pesar de que el mes parece no representar una gran influencia dentro del tipo de delito, podemos apreciar que los primeros meses del año tienen un ligero aumento en los delitos registrados respecto a los demás. Una de las posibles causas es que debido a las fiestas de fin de año solemos relajarnos y prestamos menos atención a actitudes sospechosas. Además, en esa época del a
heat_data
?table
table(rpois(100, 5))
table(heat_data$Mes, heat_data$Categoría)
table(heat_data$Mes, heat_data$Categoría, heat_data$Delitos)
table(heat_data)
data("mtcars")
head(mtcars)
substr(heat_data$Categoría,0,35)
table(substr(heat_data$Categoría,0,35), heat_data$Mes)
table(substr(heat_data$Categoría,0,35), heat_data$Mes, heat_data$Delitos)
?matrix
matrx(heat$data, nrow = 12)
matrix(heat$data, nrow = 12)
matrix(heat_data$Delitos, nrow = 12)
matrix(heat_data$Delitos, nrow = 16)
matrix(heat_data$Delitos, nrow = 16, byrow = T)
matrix(heat_data$Delitos, nrow = 16, byrow = T, dimnames = list(heat$data))
c(heat$data)
c(heat_data$Categoría)
heat_data$Categoría
matrix(heat_data$Delitos, nrow = 16, byrow = T,
dimnames = list(unique(heat_data$Categoría)))
unique(heat_data$Mes))
matrix(heat_data$Delitos, nrow = 16, byrow = T,
dimnames = list(substr(unique(heat_data$Categoría),0,35),
unique(heat_data$Mes)))
matrix(heat_data$Delitos, nrow = 16, byrow = T,
dimnames = list(substr(unique(heat_data$Categoría),0,10),
unique(heat_data$Mes)))
matrix(heat_data$Delitos, nrow = 16, byrow = T,
dimnames = list(substr(unique(heat_data$Categoría),0,10),
unique(heat_data$Mes))) %>%
kable()
dens <-
victimas %>%
#filter(Edad < 150, Edad>0) %>%
ggplot() +
geom_density(aes(x=Edad,fill=factor(Año_inicio),
color=factor(Año_inicio)),
alpha=0.5, size=1, stat = "count") +
labs(title = "Densidad de la edad por año",
x = "edad",
y = "cantidad de personas",
fill = "Año",
color = "")
ggplotly(dens, tooltip = c("count", "Edad"),
dynamicTicks = TRUE, width = 800)
dens <-
victimas %>%
filter(Edad < 150, Edad>0) %>%
ggplot() +
geom_density(aes(x=Edad,fill=factor(Año_inicio),
color=factor(Año_inicio)),
alpha=0.5, size=1, stat = "count") +
labs(title = "Densidad de la edad por año",
x = "edad",
y = "cantidad de personas",
fill = "Año",
color = "")
ggplotly(dens, tooltip = c("count", "Edad"),
dynamicTicks = TRUE, width = 800)
names(victimas)
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad) %>%
filter(Edad = 120)
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad) %>%
filter(Edad == 120)
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica, comppetencia) %>%
filter(Edad == 120)
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica, competencia) %>%
filter(Edad == 120)
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 120) %>%
kable()
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 365) %>%
kable()
max(victimas$Edad)
max(victimas$Edad, na.rm = T)
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 369) %>%
kable()
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 120) %>%
kable()
victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 120) %>%
rename(Fecha = FechaInicio, Categoría = Categoria,
CalidadJurídica = CalidadJuridica) %>%
kable()
out <-victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 120) %>%
rename(Fecha = FechaInicio, Categoría = Categoria,
CalidadJurídica = CalidadJuridica)
View(out)
out
View(out)
str_replace(out$TipoPersona, "FISICA", "FÍsica")
out <-victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 120) %>%
rename(Fecha = FechaInicio, Categoría = Categoria,
CalidadJurídica = CalidadJuridica)
out$TipoPersona <- str_replace(out$TipoPersona, "FISICA", "FÍsica")
out$CalidadJurídica <-
str_replace(out$CalidadJurídica, "VICTIMA", "VÍCTIMA")
out %>%
kable()
out <-victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 120) %>%
rename(Fecha = FechaInicio, Categoría = Categoria,
CalidadJurídica = CalidadJuridica)
out$TipoPersona <- str_replace(out$TipoPersona, "FISICA", "FÍSICA")
out$CalidadJurídica <-
str_replace(out$CalidadJurídica, "VICTIMA", "VÍCTIMA")
out %>%
kable()
rm(list = ls()[!(ls() %in% c("victimas", "diccionario"))])
knitr::opts_chunk$set(echo = TRUE, warning = FALSE,
message = FALSE, fig.align = "center")
histo <-
victimas %>%
filter(!is.na(Sexo), !is.na(CalidadJuridica)) %>%
arrange(CalidadJuridica) %>%
ggplot() +
geom_histogram(aes(Sexo, fill = CalidadJuridica),
stat = "count") +
facet_grid(Año_inicio~.) +
coord_flip() +
labs(title = "Calidad jurídica de las víctimas",
x = "Calidad jurídica",
y = "Cantidad de delitos",
fill = "") +
theme(axis.text.y = element_text(angle = 70))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE,
message = FALSE, fig.align = "center")
library(plotly)
library(tidyverse)
library(lubridate)
library(openxlsx)
library(kableExtra)
library(sf)
library(moments)
library(gganimate)
library(wordcloud)
library(stringr)
data_url <- "https://archivo.datos.cdmx.gob.mx/fiscalia-general-de-justicia/victimas-en-carpetas-de-investigacion-fgj/victimas_completa_julio_2021.csv"
victimas <- read_csv(data_url, show_col_types = FALSE)
dicc_url <- "https://datos.cdmx.gob.mx/dataset/7593b324-6010-44f7-8132-cb8b2276c842/resource/10235569-f4a9-4876-9465-9780887df8e2/download/diccionario-de-victimas-actualizado.xlsx"
diccionario <- read.xlsx(dicc_url, sheet =1)
victimas$Mes_inicio <- as.factor(victimas$Mes_inicio)
victimas$FechaInicio <- dmy(victimas$FechaInicio)
victimas$Delito <- as.factor(victimas$Delito)
victimas$Categoria <- as.factor(victimas$Categoria)
victimas$Sexo <- as.factor(victimas$Sexo)
victimas$TipoPersona <- as.factor(victimas$TipoPersona)
victimas$CalidadJuridica <- as.factor(victimas$CalidadJuridica)
victimas$competencia <- as.factor(victimas$competencia)
victimas$FechaHecho <- dmy(victimas$FechaHecho)
victimas$AlcaldiaHechos <- as.factor(victimas$AlcaldiaHechos)
victimas$Mes_hecho <- factor(victimas$Mes_hecho,
levels = c("Enero","Febrero","Marzo",
"Abril","Mayo","Junio",
"Julio","Agosto",
"Septiembre","Octubre",
"Noviembre","Diciembre"))
diccionario[,1:2] %>%
rename(Variable = Nombre.de.variable) %>%
kable()
victimas %>%
select(Año_inicio, Sexo, Edad) %>%
rename('Año inicio'=Año_inicio) %>%
filter(!is.na(Edad), !is.na(Sexo)) %>%
group_by(`Año inicio`, Sexo) %>%
summarise(Media = round(mean(Edad),2),
SD = round(sd(Edad),2),
Mediana = median(Edad),
Asimetría = round(skewness(Edad),2),
Curtosis = round(kurtosis(Edad),2),
#IQR = IQR(Edad),
Mínimo = min(Edad),
Máximo = max(Edad)) %>%
kable()
cloud <-
victimas %>%
select(Delito) %>%
group_by(Delito) %>%
tally() %>%
na.omit() %>%
arrange(desc(n))
wordcloud(words = cloud$Delito, freq = cloud$n, random.color = T,
max.words=200, random.order=FALSE, rot.per=.20,
colors=colorRamps::blue2green(200))
if (!dir.exists("datos_mapa")) {
map_url <- "https://github.com/prestevez/covid-19-mx-map/raw/master/datos_covid/01_32_mun.zip"
download.file(map_url, destfile = "datos_mapa.zip")
unzip("datos_mapa.zip", exdir = "datos_mapa")
file.remove("datos_mapa.zip")
}
mex_map <-
st_read("datos_mapa/01_32_mun.shp", quiet = TRUE) %>%
st_set_crs("+proj=lcc +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102 +x_0=2500000 +y_0=0 +ellps=GRS80 +units=m +no_defs") %>%
filter(CVE_ENT == "09") %>%
rename(Alcaldia = NOMGEO)
mex_map$Alcaldia <- chartr("ÁÉÍÓÚ", "AEIOU",
toupper(mex_map$Alcaldia))
map_filt <-
victimas %>%
select(AlcaldiaHechos) %>%
group_by(AlcaldiaHechos) %>%
tally(name = "Delitos") %>%
na.omit() %>%
arrange(desc(Delitos))
map_filt$AlcaldiaHechos <-
str_replace(map_filt$AlcaldiaHechos,
"GUSTAVO A MADERO", "GUSTAVO A. MADERO")
mex_map_del <-
left_join(mex_map, map_filt,
by = c("Alcaldia" = "AlcaldiaHechos")) %>%
rename(Alcaldía = Alcaldia)
rm(mex_map)
map <-
ggplot() +
geom_sf(data = mex_map_del,
aes(fill = Delitos, shape = Alcaldía),
colour = "grey75", size = 0.1) +
labs(title = "Cantidad de delitos por alcaldía en la CDMX",
x = "Longitud",
y = "Latitud") +
theme_bw() +
scale_fill_gradient(high = "red", low = "yellow", name = NULL,
labels = NULL, breaks = NULL) +
theme(legend.position = "right")
ggplotly(map, tooltip = c("Delitos","Alcaldía"),
width = 800)
loli_data <-
data.frame(día = as.character(wday(victimas$FechaHecho,
label = TRUE, abbr = FALSE))) %>%
group_by(día) %>%
tally() %>%
na.omit() %>%
rename(delitos = n)
loli_data$día <- factor(loli_data$día,
levels = c("lunes","martes",
"miércoles","jueves",
"viernes","sábado", "domingo"))
loli <-
loli_data %>%
ggplot(aes(x=día, y=delitos)) +
geom_segment(aes(xend=día, yend=0)) +
geom_point(size=4, color= "#189c54") +
theme_bw() +
labs(title = "Total de delitos por día de la semana",
x = "Día de la semana",
y = "Total de delitos")
ggplotly(loli, width = 800)
heat_data <-
victimas %>%
select(Mes_hecho, Categoria) %>%
filter(!is.na(Mes_hecho)) %>%
group_by(Mes_hecho, Categoria) %>%
tally() %>%
arrange(Categoria) %>%
rename(Categoría = Categoria, Mes = Mes_hecho, Delitos=n)
heat <-
heat_data %>%
ggplot(aes(x=Mes, y=Categoría, fill=log(Delitos),
size=Delitos)) +
geom_tile() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45)) +
scale_y_discrete(labels=
substr(unique(sort(victimas$Categoria)),
0,35)) +
scale_fill_gradient2(low="green", mid="yellow", high="red",
midpoint = mean(log(heat_data$Delitos))) +
labs(title = "Tipo de delito respecto a cada mes",
x = "Mes",
y = "Tipo de delito")
ggplotly(heat, dynamicTicks = TRUE, width = 800,
tooltip = c("Categoría", "Mes", "Delitos"))
# matrix(heat_data$Delitos, nrow = 16, byrow = T,
#        dimnames = list(substr(unique(heat_data$Categoría),0,10),
#                        unique(heat_data$Mes))) %>%
# kable()
dens <-
victimas %>%
filter(Edad < 150, Edad>0) %>%
ggplot() +
geom_density(aes(x=Edad,fill=factor(Año_inicio),
color=factor(Año_inicio)),
alpha=0.5, size=1, stat = "count") +
labs(title = "Densidad de la edad por año",
x = "Edad",
y = "Cantidad de personas",
fill = "Año",
color = "")
ggplotly(dens, tooltip = c("count", "Edad"),
dynamicTicks = TRUE, width = 800)
box <-
victimas %>%
filter(Edad<150) %>%
ggplot() +
geom_boxplot(aes(x = factor(Año_inicio),y = Edad,
color = factor(Año_inicio))) +
labs(title = "Distribución de la edad en cada año",
x = "Año de la carpeta",
y = "Edad") +
theme(legend.position = "none")
ggplotly(box, dynamicTicks = TRUE, width = 800)
out <-victimas %>%
select(FechaInicio, Delito, Categoria, Sexo, Edad, TipoPersona,
CalidadJuridica) %>%
filter(Edad == 120) %>%
rename(Fecha = FechaInicio, Categoría = Categoria,
CalidadJurídica = CalidadJuridica)
out$TipoPersona <- str_replace(out$TipoPersona, "FISICA", "FÍSICA")
out$CalidadJurídica <-
str_replace(out$CalidadJurídica, "VICTIMA", "VÍCTIMA")
out %>%
kable()
histo <-
victimas %>%
filter(!is.na(Sexo), !is.na(CalidadJuridica)) %>%
arrange(CalidadJuridica) %>%
ggplot() +
geom_histogram(aes(Sexo, fill = CalidadJuridica),
stat = "count") +
facet_grid(Año_inicio~.) +
coord_flip() +
labs(title = "Calidad jurídica de las víctimas",
x = "Calidad jurídica",
y = "Cantidad de delitos",
fill = "") +
theme(axis.text.y = element_text(angle = 70))
ggplotly(histo, width = 800) %>%
layout(legend = list(x = 1.05,
title =list(text= "Calidad jurídica")))
line<-
victimas %>%
group_by(Categoria, FechaInicio) %>%
tally() %>%
rename(Categoría = Categoria) %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n, color=Categoría)) +
#theme(legend.position = "bottom") +
labs(title = "Delitos a través del tiempo",
x = "Fecha",
y = "Cantidad de delitos")
ggplotly(line, dynamicTicks = T, width = 800) %>%
layout(legend = list(x = 1, y = 1,
font = list(size = 8)))
pie2 <-
victimas %>%
select(competencia) %>%
group_by(competencia) %>%
tally() %>%
na.omit()
pie2$competencia <- str_replace(pie2$competencia, "COMUN", "COMÚN")
pie2 <- pie2 %>%
plot_ly(labels = ~competencia, values = ~n, type = 'pie',
width = 800, rotation = 90) %>%
layout(title = "Proporción de la clasificación de los hechos")
pie2
pie3 <-
victimas %>%
select(TipoPersona) %>%
group_by(TipoPersona) %>%
tally() %>%
na.omit()
pie3$TipoPersona <- str_replace(pie3$TipoPersona,
"FISICA","FÍSICA")
pie3<- pie3 %>%
plot_ly(labels = ~TipoPersona, values = ~n, type = 'pie',
width = 800) %>%
layout(title = "Proporción del tipo de persona")
pie3
pie4 <-
victimas %>%
select(Sexo) %>%
group_by(Sexo) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~Sexo, values = ~n, type = 'pie',
width = 800) %>%
layout(title = "Proporción del sexo de las víctimas")
pie4
bar_data <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(tiempo, na.rm = TRUE)) %>%
arrange(Categoria)
bar <-
bar_data %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
labs(title = "Promedio del tiempo en días entre hecho y denuncia por tipo de delito",
x = "Tipo de delito",
y = "Días promedio entre el delito y la denuncia") +
theme(legend.position = "none")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("tiempo"), dynamicTicks = TRUE,
width = 800)
scat <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
filter(Edad<150, Edad>0, Categoria == "VIOLACIÓN",
!is.na(Sexo)) %>%
ggplot() +
geom_point(aes(x=Edad, y=inicio_vs_hecho, color = Sexo)) +
labs(title = "Días desde el hecho a la denuncia por edad",
subtitle = 'Fecha: {frame_time}',
x = "Edad",
y = "Días desde que ocurre el hecho hasta que se denuncia") +
ylim(0,5000) +
transition_time(FechaInicio) +
ease_aes('linear')
animate(scat, duration = 40, width = 800)
rm(list = ls()[!(ls() %in% c("victimas", "diccionario"))])
