total <- sum(universo) #valor desconocido qu equiero aproximar
var_universo <- var(universo) #s^2_(x, U)
#Obtener una muestra de tamaño 20
n <- 20
muestra <- sample(universo)
muestra <- sample(universo, size=n, replace=F)
#Estimo el total
t_gorrito <- sum(muestra/(n/100))
histo <-
victimas %>%
filter(!is.na(Sexo), !is.na(CalidadJuridica)) %>%
ggplot() +
geom_histogram(aes(CalidadJuridica, fill = Sexo),
stat = "count") +
facet_grid(Año_inicio~.) +
coord_flip() +
labs(title = ""
x = "cantidad de delitos",
histo <-
victimas %>%
filter(!is.na(Sexo), !is.na(CalidadJuridica)) %>%
ggplot() +
geom_histogram(aes(CalidadJuridica, fill = Sexo),
stat = "count") +
facet_grid(Año_inicio~.) +
coord_flip() +
labs(title = "",
x = "cantidad de delitos",
y = "tipo de delito")
ggplotly(histo)
#Calculo la varianza de tgorrito (exacta)
var_t_gorrito <- 100^2/(1-(n/100))/n*var_universo
#Estimar la varianza de tgorrido (estimada con muestra)
var_gorrito_t_gorrito <- 100^2*(1-n/100)/n*var(muestra)
victimas %>% group_by(CalidadJuridica) %>% tally() %>% arrange(desc(n))
victimas %>% group_by(CalidadJuridica) %>% tally() %>% arrange(desc(n)) %>% select(CalidadJuridica)[1]
victimas %>% group_by(CalidadJuridica) %>% tally() %>% arrange(desc(n)) %>% select(CalidadJuridica)
victimas %>% group_by(CalidadJuridica) %>% tally() %>% arrange(desc(n)) %>% select(CalidadJuridica) %>% [1]
victimas %>% group_by(CalidadJuridica) %>% tally() %>% arrange(desc(n)) %>% select(CalidadJuridica) %>% head(1)
ggplotly(line)
line<-
victimas %>%
group_by(Categoria, FechaInicio) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n)) +
theme(legend.position = "left") +
labs()
ggplotly(line)
line<-
victimas %>%
group_by(Categoria, FechaInicio) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n)) +
theme(legend.position = "left") +
facet_wrap(.~Categoria)
line
ggplotly(line)
victimas %>%
group_by(month(FechaInicio), year(FechaInicio)) %>%
tally()
victimas %>%
group_by(year(FechaInicio),month(FechaInicio)) %>%
tally()
ggplotly(line)
victimas %>%
group_by(year(FechaInicio),month(FechaInicio)) %>%
tally()
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally()
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n)) +
theme(legend.position = "left")
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally()
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally()
a <- 2019
b <- 1
concat(a.b)
concat(a,b)
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
mutate(fecha = paste0('month(FechaInicio)',-,'year(FechaInicio)'))
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
mutate(fecha = paste0(month(FechaInicio),-,year(FechaInicio)))
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
mutate(fecha = paste0(month(FechaInicio),-,year(FechaInicio)))
paste(a,b)
?tally
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
rename(año = 'year(FechaInicio)', mes = 'month(FechaInicio)')
mutate(fecha = paste0(mes,-,año)
mutate(fecha = paste0(as.character(mes),-,as.character(año))
mutate(fecha = paste0(mes,"-",año)
victimas %>%
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
rename(año = 'year(FechaInicio)', mes = 'month(FechaInicio)') %>%
mutate(fecha = paste0(mes,"-",año))
ym("1-2019")
?ym
as.Date("1-2019", format = "%m-%y")
as.Date("1-2019", format = "%m-%Y")
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
rename(año = 'year(FechaInicio)', mes = 'month(FechaInicio)')
mutate(fecha = dmy(paste0("01",mes,"-",año))
victimas %>%
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
rename(año = 'year(FechaInicio)', mes = 'month(FechaInicio)') %>%
mutate(fecha = dmy(paste0("01",mes,"-",año)))
message()
mes <- 1
año <- 2020
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
rename(año = 'year(FechaInicio)', mes = 'month(FechaInicio)') %>%
mutate(fecha = dmy(paste0("01","-",mes,"-",año)))
victimas %>%
group_by(year(FechaInicio),month(FechaInicio), Categoria) %>%
tally() %>%
rename(año = 'year(FechaInicio)', mes = 'month(FechaInicio)') %>%
mutate(fecha = dmy(paste0("01","-",mes,"-",año))) %>%
ggplot() +
geom_line(aes(x = fecha, y = n)) +
theme(legend.position = "left")
line<-
victimas %>%
group_by(Categoria, FechaInicio) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n, color=Categoria)) +
theme(legend.position = "left") +
ggplotly(line)
line<-
victimas %>%
group_by(Categoria, FechaInicio) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n, color=Categoria)) +
theme(legend.position = "left")
ggplotly(line)
?ggplotly
ggplotly(line, dynamicTicks = TRUE)
a <- victimas$FechaHecho[1]
a
victimas$HoraHecho[1]
line<-
victimas %>%
mutate(FechaInicioHora = ymd_hms(paste(FechaInicio, HoraInicio)))
line
line$FechaInicioHora
line<-
victimas %>%
mutate(FechaInicioHora =
ymd_hms(paste(FechaInicio, HoraInicio))) %>%
group_by(Categoria, FechaInicioHora) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicioHora, y = n, color=Categoria)) +
theme(legend.position = "left") +
labs(title = "Delitos a través del tiempo",
x = "fecha",
y = "cantidad de delitos")
line
ggplotly(line, dynamicTicks = TRUE)
line<-
victimas %>%
mutate(FechaInicioHora =
ymd_hms(paste(FechaInicio, HoraInicio))) %>%
group_by(Categoria, FechaInicioHora) %>%
tally()
View(line)
line<-
victimas %>%
mutate(FechaInicioHora =
ymd_hms(paste(FechaInicio, HoraInicio))) %>%
group_by(Categoria, FechaInicioHora) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicioHora, y = n, color=Categoria)) +
theme(legend.position = "right") +
labs(title = "Delitos a través del tiempo",
x = "fecha",
y = "cantidad de delitos")
ggplotly(line, dynamicTicks = TRUE)
line<-
victimas %>%
mutate(FechaInicioHora =
ymd_hms(paste(FechaInicio, HoraInicio))) %>%
group_by(Categoria, FechaInicioHora) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicioHora, y = n, color=Categoria)) +
theme(legend.position = "left") +
labs(title = "Delitos a través del tiempo",
x = "fecha",
y = "cantidad de delitos")
ggplotly(line, dynamicTicks = TRUE)
line<-
victimas %>%
group_by(Categoria, FechaInicio) %>%
tally() %>%
ggplot() +
geom_line(aes(x = FechaInicio, y = n, color=Categoria)) +
theme(legend.position = "left") +
labs(title = "Delitos a través del tiempo",
x = "fecha",
y = "cantidad de delitos")
ggplotly(line, dynamicTicks = TRUE)
pie4 <-
victimas %>%
select(Sexo) %>%
group_by(Sexo) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~Sexo, values = ~n, type = 'pie') %>%
layout(title = "Proporción del sexo de las víctimas")
pie4
pie1 <-
victimas %>%
select(CalidadJuridica) %>%
group_by(CalidadJuridica) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~CalidadJuridica, values = ~n, type = 'pie') %>%
layout(title = "Proporción de la calidad jurídica de las personas")
pie1
pie2 <-
victimas %>%
select(competencia) %>%
group_by(competencia) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~competencia, values = ~n, type = 'pie') %>%
layout(title = "Proporción de la competencia que procesa el delito")
pie2
pie3 <-
victimas %>%
select(TipoPersona) %>%
group_by(TipoPersona) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~TipoPersona, values = ~n, type = 'pie') %>%
layout(title = "Proporción del tipo de persona")
pie3
pie4 <-
victimas %>%
select(Sexo) %>%
group_by(Sexo) %>%
tally() %>%
na.omit() %>%
plot_ly(labels = ~Sexo, values = ~n, type = 'pie') %>%
layout(title = "Proporción del sexo de las víctimas")
pie4
?plot_ly
scat <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
filter(Edad<150, Edad>0, Categoria == "VIOLACIÓN",
!is.na(Sexo)) %>%
ggplot() +
geom_point(aes(x=Edad, y=inicio_vs_hecho, color = Sexo)) +
labs(title = "Días desde el hecho a la denuncia por edad",
subtitle = 'Fecha: {frame_time}',
x = "edad",
y = "días desde que ocurre el hecho hasta que se denuncia") +
ylim(0,1000) +
transition_time(FechaInicio) +
ease_aes('linear')
animate(scat, duration = 40)
?ggplotly
scale_x_discrete(labels=
substr(unique(sort(victimas$categoría)),0,20))
ggplot() +
geom_bar(aes(x=categoría, y=tiempo, fill = categoría),
stat = "identity") +
coord_flip() +
theme(legend.position = "none")+
labs(title = "",
x = "tiempo entre el hecho y la denuncia") +
scale_x_discrete(labels=
substr(unique(sort(victimas$categoría)),0,20))
bar <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(inicio_vs_hecho = mean(inicio_vs_hecho,
na.rm = TRUE)) %>%
arrange(Categoria) %>%
rename(tiempo=inicio_vs_hecho, categoría=Categoria) %>%
ggplot() +
geom_bar(aes(x=categoría, y=tiempo, fill = categoría),
stat = "identity") +
coord_flip() +
theme(legend.position = "none")+
labs(title = "",
x = "tiempo entre el hecho y la denuncia") +
scale_x_discrete(labels=
substr(unique(sort(victimas$categoría)),0,20))
ggplotly(bar, tooltip = c("categoría", tiempo))
ggplotly(bar, tooltip = c("categoría", "tiempo"))
bar
bar <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(inicio_vs_hecho = mean(inicio_vs_hecho,
na.rm = TRUE)) %>%
arrange(Categoria) %>%
rename(tiempo=inicio_vs_hecho, categoría=Categoria) %>%
ggplot() +
geom_bar(aes(x=categoría, y=tiempo, fill = categoría),
stat = "identity") +
coord_flip() +
theme(legend.position = "none")+
labs(title = "",
x = "tiempo entre el hecho y la denuncia") +
scale_x_discrete(labels=
substr(unique(sort(victimas$categoría)),0,20))
ggplotly(bar, tooltip = c("categoría", "tiempo"))
bar <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(inicio_vs_hecho = mean(inicio_vs_hecho,
na.rm = TRUE)) %>%
arrange(Categoria) %>%
rename(tiempo=inicio_vs_hecho, categoría=Categoria) %>%
ggplot() +
geom_bar(aes(x=categoría, y=tiempo, fill = categoría),
stat = "identity") +
coord_flip() +
theme(legend.position = "none") +
scale_x_discrete(labels=
substr(unique(sort(victimas$categoría)),0,20))
ggplotly(bar, tooltip = c("categoría", "tiempo"))
substr(unique(sort(victimas$categoría)),0,20)
substr(unique(sort(victimas$Categoria)),0,20)
bar <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(inicio_vs_hecho = mean(inicio_vs_hecho,
na.rm = TRUE)) %>%
arrange(Categoria) %>%
rename(tiempo=inicio_vs_hecho, categoría=Categoria)
bar
bar
bar <-
victimas %>%
mutate(inicio_vs_hecho = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(inicio_vs_hecho = mean(inicio_vs_hecho,
na.rm = TRUE)) %>%
arrange(Categoria) %>%
ggplot() +
geom_bar(aes(x=Categoria, y=inicio_vs_hecho, fill = Categoria),
stat = "identity") +
coord_flip() +
theme(legend.position = "none")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("categoría", "tiempo"))
bar <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(inicio_vs_hecho,
na.rm = TRUE)) %>%
arrange(Categoria) %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
theme(legend.position = "none")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("tiempo"))
bar <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(inicio_vs_hecho,
na.rm = TRUE)) %>%
arrange(Categoria) %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
labs(title = "Promedio del tiempo entre hecho y denuncia por tipo de delito",
x = "tipo de delito",
y = "tiempo promedio entre el delito y la denuncia") +
theme(legend.position = "right")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
bar <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(tiempo, na.rm = TRUE)) %>%
arrange(Categoria) %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
labs(title = "Promedio del tiempo entre hecho y denuncia por tipo de delito",
x = "tipo de delito",
y = "tiempo promedio entre el delito y la denuncia") +
theme(legend.position = "right")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("tiempo"))
bar_data <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(tiempo, na.rm = TRUE)) %>%
arrange(Categoria)
View(bar_data)
bar_data %>% arrange(tiempo)
bar_data %>% arrange(desctiempo))
bar_data %>% arrange(desc(tiempo))
bar_data <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(tiempo, na.rm = TRUE)) %>%
arrange(Categoria)
bar <-
bar_data %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
labs(title = "Promedio del tiempo entre hecho y denuncia por tipo de delito",
x = "tipo de delito",
y = "tiempo promedio entre el delito y la denuncia") +
theme(legend.position = "right")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("tiempo"))
bar_data <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(tiempo, na.rm = TRUE)) %>%
arrange(Categoria)
bar <-
bar_data %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
labs(title = "Promedio del tiempo entre hecho y denuncia por tipo de delito",
x = "tipo de delito",
y = "tiempo promedio entre el delito y la denuncia") +
theme(legend.position = "right")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("tiempo"))
bar_data <-
victimas %>%
mutate(tiempo = difftime(FechaInicio, FechaHecho,
units = "days")) %>%
group_by(Categoria) %>%
summarise(tiempo = mean(tiempo, na.rm = TRUE)) %>%
arrange(Categoria)
bar <-
bar_data %>%
ggplot() +
geom_bar(aes(x=Categoria, y=tiempo, fill = Categoria),
stat = "identity") +
coord_flip() +
labs(title = "Promedio del tiempo entre hecho y denuncia por tipo de delito",
x = "tipo de delito",
y = "tiempo promedio entre el delito y la denuncia") +
theme(legend.position = "right")+
scale_x_discrete(labels=
substr(unique(sort(victimas$Categoria)),0,20))
ggplotly(bar, tooltip = c("tiempo"))
