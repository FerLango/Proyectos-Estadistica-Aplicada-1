scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Cantidad")
gastos_poblacion %>%
ggplot(aes(x= gasto_men,y=n)) +
geom_density(fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Cantidad")
gastos_poblacion <-
gastos_muestra %>%
select(gasto_men) %>%
group_by(gasto_men) %>%
tally() %>%
mutate(n = round(126014024/315743*n,0))
View(gastos_poblacion)
View(gastos_poblacion)
View(gastos_poblacion)
View(gastos_poblacion)
gastos_poblacion <-
gastos_muestra %>%
select(gasto_men) %>%
group_by(gasto_men) %>%
tally() %>%
mutate(n = round(126014024/315743*n,0))
gastos_poblacion %>%
ggplot(aes(x= gasto_men)) +
geom_density(aes(y=..count..),fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Cantidad")
View(gastos_poblacion)
gastos_poblacion %>%
ggplot(aes(x= gasto_men)) +
geom_density(aes(y=n),fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Cantidad")
gastos_poblacion <-
gastos_muestra %>%
select(gasto_men) %>%
group_by(gasto_men) %>%
tally() %>%
mutate(n = round(126014024/315743*n,0))
gastos_muestra %>%
ggplot(aes(x= gasto_men)) +
geom_density(aes(y=n),fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Cantidad")
gastos_muestra %>%
ggplot(aes(x= gasto_men)) +
geom_density(fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Cantidad")
?geom_density
gastos_muestra %>%
ggplot(aes(x= gasto_men)) +
geom_density(fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Densidad")
ingresos_poblacion <-
ingresos_muestra %>%
select(ing_men) %>%
group_by(ing_men) %>%
tally() %>%
mutate(n = round(126014024/315743*n,0))
View(ingresos_poblacion)
gastos_muestra %>%
ggplot(aes(x= gasto_men*n)) +
geom_density(fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Densidad")
gastos_poblacion %>%
ggplot(aes(x= gasto_men*n)) +
geom_density(fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Densidad")
gastos_muestra %>%
ggplot(aes(x= gasto_men)) +
geom_density(fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Densidad")
ingresos_poblacion <-
ingresos_muestra %>%
select(ing_men) %>%
group_by(ing_men) %>%
tally() %>%
mutate(n = round(126014024/315743*n,0))
ingresos_muestra %>%
ggplot(aes(y= ing_men)) +
geom_boxplot(fill = "lightblue") +
scale_y_log10(labels = comma,
breaks = c(1,100,1000,10000,100000,1000000)) +
scale_x_discrete(breaks = 0) +
labs(title = "Distribución del ingreso (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
y = "Ingreso mensual normalizado")
?survey
??survey
install.packages("survey")
mean(ingresos_muestra$sexo)
?mean
round(mean(ingresos_muestra$sexo, na.rm = TRUE),2)
View(ingresos_muestra)
round(mean(ingresos_muestra$ing_men),2)
round(sum(ingresos_muestra$ing_men)/nrow(ingresos_muestra),2)
media_boot <- length(muestra_bootstrap)/
length(unique(muestra_bootstrap))
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
media_boot <- length(muestra_bootstrap)/
length(unique(muestra_bootstrap))
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
media_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
media_boot <- length(muestra_bootstrap)/
length(unique(muestra_bootstrap))
}
ic_bajo_boot_2 <- quantile(media_boot, alfa/2)
ic_alto_boot_2 <- quantile(media_boot, 1-alfa/2)
round(sum(ingresos_muestra$ing_men)/nrow(ingresos_muestra),2)
m <- 1000
confianza <- 90
alfa <- (100-confianza)/100
media_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
media_boot <- length(muestra_bootstrap)/
length(unique(muestra_bootstrap))
}
ic_bajo_boot_2 <- quantile(media_boot, alfa/2)
ic_alto_boot_2 <- quantile(media_boot, 1-alfa/2)
m <- 1000
confianza <- 90
alfa <- (100-confianza)/100
media_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
media_boot[i] <- sum(muestra_bootstrap)/
length(muestra_bootstrap)
}
ic_bajo_boot_2 <- quantile(media_boot, alfa/2)
ic_alto_boot_2 <- quantile(media_boot, 1-alfa/2)
round(sum(ingresos_muestra$ing_men)/nrow(ingresos_muestra),2)
c(ic_bajo_boot_2, ic_alto_boot_2)
c(round(ic_bajo_boot_2,2), round(ic_alto_boot_2,2))
var(ingresos_muestra)
var(ingresos_muestra$ing_men)
var(ingresos_muestra$ing_men)
ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men)
(ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)/nrow(ingresos_muestra$ing_men)
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)/nrow(ingresos_muestra$ing_men)
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)/nrow(ingresos_muestra$ing_men)
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)/nrow(ingresos_muestra$ing_men)
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)/nrow(ingresos_muestra$ing_men)
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)
sum((ingresos_muestra$ing_men - mean(ingresos_muestra$ing_men))^2)/nrow(ingresos_muestra)
var(ingresos_muestra$ing_men)
var_pob <- sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^2)/
nrow(ingresos_muestra)
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
var_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
var_boot[i] <- sum((muestra_bootstrap -
mean(muestra_bootstrap))^2)/
nrow(muestra_bootstrap)
}
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
var_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
var_boot[i] <- sum((muestra_bootstrap -
mean(muestra_bootstrap))^2)/
length(muestra_bootstrap)
}
ic_bajo_boot_3 <- quantile(media_boot, alfa/2)
ic_alto_boot_3 <- quantile(media_boot, 1-alfa/2)
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
var_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
var_boot[i] <- sum((muestra_bootstrap -
mean(muestra_bootstrap))^2)/
length(muestra_bootstrap)
}
ic_bajo_boot_3 <- quantile(var_boot, alfa/2)
ic_alto_boot_3 <- quantile(var_boot, 1-alfa/2)
format(var(ingresos_muestra$ing_men), scientific = F, big.mark = ',')
moments::skewness(ingresos_muestra$ing_men)
asi_pob <- sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^3)/
(nrow(ingresos_muestra)*
var(ingresos_muestra$ing_men)^(3/2))
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
asi_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
asi_boot[i] <- sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^3)/
(length(ingresos_muestra)*
var(ingresos_muestra$ing_men)^(3/2))
}
ic_bajo_boot_3 <- quantile(asi_boot, alfa/2)
ic_alto_boot_3 <- quantile(asi_boot, 1-alfa/2)
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
media_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
media_boot[i] <- sum(muestra_bootstrap)/
length(muestra_bootstrap)
}
ic_bajo_boot_1 <- quantile(media_boot, alfa/2)
ic_alto_boot_1 <- quantile(media_boot, 1-alfa/2)
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
var_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
var_boot[i] <- sum((muestra_bootstrap -
mean(muestra_bootstrap))^2)/
length(muestra_bootstrap)
}
ic_bajo_boot_2 <- quantile(var_boot, alfa/2)
ic_alto_boot_2 <- quantile(var_boot, 1-alfa/2)
summary(asi_boot)
asi_pob <- sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^3)/
(nrow(ingresos_muestra)*
var(ingresos_muestra$ing_men)^(3/2))
asi_pob <- sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^3)/
(nrow(ingresos_muestra)*
var(ingresos_muestra$ing_men)^(3/2))
c(round(ic_bajo_boot_3,2), round(ic_alto_boot_3,2))
sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^3)
sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^3)
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
asi_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
asi_boot[i] <- sum((muestra_bootstrap -
mean(muestra_bootstrap))^3)/
(length(muestra_bootstrap)*
var(muestra_bootstrap)^(3/2))
}
ic_bajo_boot_3 <- quantile(asi_boot, alfa/2)
ic_alto_boot_3 <- quantile(asi_boot, 1-alfa/2)
asi_pob
c(round(ic_bajo_boot_3,2), round(ic_alto_boot_3,2)
)
sqrt(ic_bajo_boot_2)
round(sqrt(ic_alto_boot_2),2)
round(sqrt(var_pob),2)
mean_pob <- sum(ingresos_muestra$ing_men)/nrow(ingresos_muestra)
round(mean_pob - sqrt(var_pob),2)
round(mean_pob + sqrt(var_pob),2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE,
message = FALSE, fig.align = "center")
poblacion_url <- "https://www.inegi.org.mx/contenidos/programas/enigh/nc/2020/microdatos/enigh2020_ns_poblacion_csv.zip"
ingresos_url <- "https://www.inegi.org.mx/contenidos/programas/enigh/nc/2020/microdatos/enigh2020_ns_ingresos_csv.zip"
gastos_url <- "https://www.inegi.org.mx/contenidos/programas/enigh/nc/2020/microdatos/enigh2020_ns_gastospersona_csv.zip"
if (!dir.exists("datos")) {
dir.create("datos")
download.file(poblacion_url, "datos/poblacion.zip")
download.file(ingresos_url, "datos/ingresos.zip")
download.file(gastos_url, "datos/gastos.zip")
unzip("datos/poblacion.zip", exdir = "datos")
unzip("datos/ingresos.zip", exdir = "datos")
unzip("datos/gastos.zip", exdir = "datos")
file.remove("datos/poblacion.zip")
file.remove("datos/ingresos.zip")
file.remove("datos/gastos.zip")
}
data_poblacion <- read.csv("datos/poblacion.csv")
data_ingresos <- read.csv("datos/ingresos.csv")
data_gastos <- read.csv("datos/gastospersona.csv")
library(tidyverse)
sexo_muestra <-
data_poblacion %>%
select(sexo) %>%
mutate(sexo = replace(sexo, sexo == 1, "Hombre")) %>%
mutate(sexo = replace(sexo, sexo == 2, "Mujer")) %>%
group_by(sexo) %>%
tally()
sexo_muestra %>%
ggplot(aes(x=sexo, y=n)) +
geom_bar(aes(fill = sexo), stat = "identity") +
geom_text(aes(y=n-.1*n,label = n)) +
labs(title = "Distribución del sexo en la muestra",
x = "Sexo",
y = "Cantidad") +
theme(legend.position = "none") +
coord_flip()
library(scales)
ingresos_muestra <-
data_ingresos %>%
select(ing_tri) %>%
mutate(ing_men = ing_tri/3)
ingresos_muestra %>%
ggplot(aes(y= ing_men)) +
geom_boxplot(fill = "lightblue") +
scale_y_log10(labels = comma,
breaks = c(1,100,1000,10000,100000,1000000)) +
scale_x_discrete(breaks = 0) +
labs(title = "Distribución del ingreso (muestra)",
subtitle = "Vista de la gráfica en escala logarítmica",
y = "Ingreso mensual normalizado")
summary(ingresos_muestra$ing_men)
gastos_muestra <-
data_gastos %>%
select(gasto_tri) %>%
mutate(gasto_men = gasto_tri/3) %>%
na.omit()
gastos_muestra %>%
ggplot(aes(x= gasto_men)) +
geom_density(aes(y=..count..),fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (muestra)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Cantidad")
summary(gastos_muestra$gasto_men)
sexo <- c("Hombre","Mujer")
n <- c(round(126014024/nrow(data_poblacion) * sexo_muestra$n[1],
0),
round(126014024/nrow(data_poblacion) * sexo_muestra$n[2],
0))
sexo_poblacion <- data.frame(sexo,n)
rm(sexo,n)
sexo_poblacion %>%
ggplot(aes(x=sexo, y=n)) +
geom_bar(aes(fill = sexo), stat = "identity") +
geom_text(aes(y=n-.1*n,label = n)) +
labs(title = "Distribución del sexo en la población",
x = "Sexo",
y = "Cantidad") +
scale_y_continuous(labels = comma) +
theme(legend.position = "none") +
coord_flip()
ingresos_poblacion <-
ingresos_muestra %>%
select(ing_men) %>%
group_by(ing_men) %>%
tally() %>%
mutate(n = round(126014024/315743*n,0))
ingresos_muestra %>%
ggplot(aes(y= ing_men)) +
geom_boxplot(fill = "lightblue") +
scale_y_log10(labels = comma,
breaks = c(1,100,1000,10000,100000,1000000)) +
scale_x_discrete(breaks = 0) +
labs(title = "Distribución del ingreso (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
y = "Ingreso mensual normalizado")
gastos_poblacion <-
gastos_muestra %>%
select(gasto_men) %>%
group_by(gasto_men) %>%
tally() %>%
mutate(n = round(126014024/315743*n,0))
gastos_muestra %>%
ggplot(aes(x= gasto_men)) +
geom_density(fill = "lightyellow") +
scale_x_log10(labels = comma,
breaks = c(0,10,100,1000,10000,100000)) +
scale_y_continuous(labels = comma) +
labs(title = "Distribución del gasto (población)",
subtitle = "Vista de la gráfica en escala logarítmica",
x = "Gasto mensual normalizado",
y = "Densidad")
mean_pob <- sum(ingresos_muestra$ing_men)/nrow(ingresos_muestra)
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
media_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
media_boot[i] <- sum(muestra_bootstrap)/
length(muestra_bootstrap)
}
ic_bajo_boot_1 <- quantile(media_boot, alfa/2)
ic_alto_boot_1 <- quantile(media_boot, 1-alfa/2)
var_pob <- sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^2)/
nrow(ingresos_muestra)
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
var_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
var_boot[i] <- sum((muestra_bootstrap -
mean(muestra_bootstrap))^2)/
length(muestra_bootstrap)
}
ic_bajo_boot_2 <- quantile(var_boot, alfa/2)
ic_alto_boot_2 <- quantile(var_boot, 1-alfa/2)
asi_pob <- sum((ingresos_muestra$ing_men -
mean(ingresos_muestra$ing_men))^3)/
(nrow(ingresos_muestra)*
var(ingresos_muestra$ing_men)^(3/2))
m <- 1000
confianza <- 80
alfa <- (100-confianza)/100
asi_boot <- rep(NA,m)
for (i in 1:m) {
muestra_bootstrap <- sample(ingresos_muestra$ing_men,
nrow(ingresos_muestra),
replace = TRUE)
asi_boot[i] <- sum((muestra_bootstrap -
mean(muestra_bootstrap))^3)/
(length(muestra_bootstrap)*
var(muestra_bootstrap)^(3/2))
}
ic_bajo_boot_3 <- quantile(asi_boot, alfa/2)
ic_alto_boot_3 <- quantile(asi_boot, 1-alfa/2)
rm(muestra_bootstrap)
